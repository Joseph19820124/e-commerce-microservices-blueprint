version: '3.8'

services:
  kong-database:
    image: postgres:14-alpine
    container_name: kong-database
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kongpass}
    ports:
      - "5432:5432"
    volumes:
      - kong-postgres-data:/var/lib/postgresql/data
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:3.4-alpine
    container_name: kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kongpass}
      KONG_PG_DATABASE: kong
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
      - kong-net

  kong:
    image: kong:3.4-alpine
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kongpass}
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PLUGINS: bundled,cors,rate-limiting,request-termination,response-transformer,oauth2,jwt,request-size-limiting
    ports:
      - "8000:8000"     # Proxy port
      - "8443:8443"     # Proxy SSL port
      - "8001:8001"     # Admin API
      - "8444:8444"     # Admin API SSL
      - "8002:8002"     # Kong Manager GUI
    depends_on:
      kong-migration:
        condition: service_completed_successfully
    networks:
      - kong-net
      - ecommerce-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  konga:
    image: pantsel/konga:latest
    container_name: konga
    environment:
      NODE_ENV: production
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: ${KONG_PG_PASSWORD:-kongpass}
      DB_DATABASE: konga
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET:-km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb}
    ports:
      - "1337:1337"
    depends_on:
      - kong
    networks:
      - kong-net
    volumes:
      - konga-data:/app/kongadata

  # Prometheus Kong exporter
  kong-prometheus-exporter:
    image: kong/kong-prometheus-plugin:latest
    container_name: kong-prometheus-exporter
    depends_on:
      - kong
    networks:
      - kong-net
      - monitoring-network

volumes:
  kong-postgres-data:
  konga-data:

networks:
  kong-net:
    driver: bridge
  ecommerce-network:
    external: true
  monitoring-network:
    external: true