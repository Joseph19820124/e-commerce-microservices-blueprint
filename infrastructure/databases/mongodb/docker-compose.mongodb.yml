version: '3.8'

# MongoDB Replica Set Configuration for E-commerce Platform
# This setup provides high availability and data consistency

networks:
  mongodb-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  mongodb-primary-data:
  mongodb-secondary1-data:
  mongodb-secondary2-data:
  mongodb-config-data:

services:
  # MongoDB Primary Node
  mongodb-primary:
    image: mongo:7.0
    container_name: mongodb-primary
    hostname: mongodb-primary
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-mongodb_admin_password}
      MONGO_INITDB_DATABASE: admin
    volumes:
      - mongodb-primary-data:/data/db
      - ./config/mongod.conf:/etc/mongod.conf:ro
      - ./scripts/init-replica-set.js:/docker-entrypoint-initdb.d/init-replica-set.js:ro
    command: >
      mongod 
      --config /etc/mongod.conf
      --replSet rs0
      --bind_ip_all
      --port 27017
    networks:
      mongodb-network:
        ipv4_address: 172.25.0.10
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # MongoDB Secondary Node 1
  mongodb-secondary1:
    image: mongo:7.0
    container_name: mongodb-secondary1
    hostname: mongodb-secondary1
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-mongodb_admin_password}
    volumes:
      - mongodb-secondary1-data:/data/db
      - ./config/mongod.conf:/etc/mongod.conf:ro
    command: >
      mongod 
      --config /etc/mongod.conf
      --replSet rs0
      --bind_ip_all
      --port 27017
    networks:
      mongodb-network:
        ipv4_address: 172.25.0.11
    depends_on:
      - mongodb-primary
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # MongoDB Secondary Node 2
  mongodb-secondary2:
    image: mongo:7.0
    container_name: mongodb-secondary2
    hostname: mongodb-secondary2
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD:-mongodb_admin_password}
    volumes:
      - mongodb-secondary2-data:/data/db
      - ./config/mongod.conf:/etc/mongod.conf:ro
    command: >
      mongod 
      --config /etc/mongod.conf
      --replSet rs0
      --bind_ip_all
      --port 27017
    networks:
      mongodb-network:
        ipv4_address: 172.25.0.12
    depends_on:
      - mongodb-primary
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # MongoDB Express - Web Admin Interface
  mongo-express:
    image: mongo-express:1.0.0
    container_name: mongodb-admin
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD:-mongodb_admin_password}
      ME_CONFIG_MONGODB_SERVER: mongodb-primary
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-admin}
    networks:
      - mongodb-network
    depends_on:
      - mongodb-primary
    restart: unless-stopped

  # MongoDB Backup Service
  mongodb-backup:
    image: mongo:7.0
    container_name: mongodb-backup
    volumes:
      - ./backup:/backup
      - ./scripts/backup.sh:/usr/local/bin/backup.sh:ro
    environment:
      MONGODB_URI: mongodb://admin:${MONGODB_ROOT_PASSWORD:-mongodb_admin_password}@mongodb-primary:27017/admin?replicaSet=rs0
      BACKUP_DIR: /backup
      BACKUP_RETENTION_DAYS: 7
    networks:
      - mongodb-network
    depends_on:
      - mongodb-primary
    command: >
      bash -c "
        chmod +x /usr/local/bin/backup.sh
        while true; do
          echo 'Starting scheduled backup...'
          /usr/local/bin/backup.sh
          echo 'Backup completed. Sleeping for 24 hours...'
          sleep 86400
        done
      "
    restart: unless-stopped
    profiles:
      - backup