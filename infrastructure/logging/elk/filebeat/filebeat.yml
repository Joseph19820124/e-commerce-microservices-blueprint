filebeat.inputs:
  # Docker container logs
  - type: container
    paths:
      - '/var/lib/docker/containers/*/*.log'
    processors:
      - add_docker_metadata:
          host: "unix:///var/run/docker.sock"
      - decode_json_fields:
          fields: ["message"]
          target: ""
          overwrite_keys: true
          process_array: false
          max_depth: 1

  # System logs
  - type: log
    enabled: true
    paths:
      - /var/log/syslog
      - /var/log/messages
    fields:
      logtype: syslog

  # Nginx logs
  - type: log
    enabled: true
    paths:
      - /var/log/nginx/access.log
      - /var/log/nginx/error.log
    fields:
      logtype: nginx
    multiline.pattern: '^\d{4}-\d{2}-\d{2}'
    multiline.negate: true
    multiline.match: after

  # Application logs
  - type: log
    enabled: true
    paths:
      - /var/log/ecommerce/*.log
    fields:
      logtype: application
    multiline.pattern: '^\d{4}-\d{2}-\d{2}'
    multiline.negate: true
    multiline.match: after
    processors:
      - decode_json_fields:
          fields: ["message"]
          target: ""
          overwrite_keys: true

filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: true
  reload.period: 10s

# Processors
processors:
  - add_host_metadata:
      when.not.contains.tags: forwarded
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~
  - add_fields:
      target: ''
      fields:
        environment: ${ENVIRONMENT:development}
        service.name: ${SERVICE_NAME:unknown}

# Output to Logstash
output.logstash:
  hosts: ["logstash:5044"]
  bulk_max_size: 2048
  compression_level: 3
  loadbalance: true
  ttl: 30s
  pipelining: 2
  worker: 2

# Logging
logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat
  keepfiles: 7
  permissions: 0640

# Monitoring
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ["elasticsearch:9200"]

# HTTP endpoint for health checks
http.enabled: true
http.host: 0.0.0.0
http.port: 5066

# Queue configuration
queue.mem:
  events: 4096
  flush.min_events: 2048
  flush.timeout: 1s