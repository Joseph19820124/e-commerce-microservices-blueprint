version: '3.8'

services:
  vault:
    image: hashicorp/vault:1.14
    container_name: vault
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_ROOT_TOKEN:-myroot}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_API_ADDR: http://0.0.0.0:8200
      VAULT_LOG_LEVEL: info
    volumes:
      - ./vault/config:/vault/config:ro
      - ./vault/policies:/vault/policies:ro
      - ./vault/scripts:/vault/scripts:ro
      - vault-data:/vault/file
      - vault-logs:/vault/logs
    ports:
      - "8200:8200"
    networks:
      - security-network
      - ecommerce-network
    command: server
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 3s
      retries: 10

  vault-init:
    image: hashicorp/vault:1.14
    container_name: vault-init
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: ${VAULT_ROOT_TOKEN:-myroot}
    volumes:
      - ./vault/scripts:/scripts:ro
    networks:
      - security-network
    depends_on:
      vault:
        condition: service_healthy
    command: sh /scripts/init-vault.sh

  # Consul backend for Vault (production)
  consul:
    image: consul:1.16
    container_name: consul
    environment:
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_CLIENT_INTERFACE: eth0
    volumes:
      - consul-data:/consul/data
      - ./consul/config:/consul/config:ro
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - security-network
    command: agent -server -ui -node=consul-1 -bootstrap-expect=1 -client=0.0.0.0

volumes:
  vault-data:
  vault-logs:
  consul-data:

networks:
  security-network:
    driver: bridge
  ecommerce-network:
    external: true